/** @file
 *	@brief	Clock System Service local declarations and definitions.
 *
 *	Description:
 *	This file contains the Clock System Service local declarations and definitions.
 *
 *
 *	@note	This file is an as-needed COPY of the file created by Microchip's Harmony Configurator,
 *	v2.04, and/or the tool-created support files (e.g., Peripheral Libs) supplied as part of the
 *	MHC eco system. We have NO intention of stealing code or technology, or of claiming undue
 *	credit. This file is here ONLY during the buildup of support for the PIC32 MZ2048 EFM 144
 *	Starter Kit, what we call the "MZ EZ" board. Eventually, I hope to link directly to Harmony's
 *	code, in a way that allows different target architectures
 *
 *	Anyway, because this is a copy of code generated by a tool owned by Microchip, there is
 *	attribution here but no copyright notice.
 *
 *	@note: @todo in our rearchitecture, this would belong in the /arch tree
 *
 *
 *	Original:
 *	Created on: Dec 26, 2017
 *	Author: kbecker
 *
 *	Current:
 *	$Revision: $
 *	$Date: $
 */

#ifndef SYS_CLK_LOCAL_H_
#define SYS_CLK_LOCAL_H_

#ifdef	__cplusplus
extern "C" {
#endif

// ============================================================================
// ----	Include Files ---------------------------------------------------------
// ============================================================================

#include "projcfg.h"

// ----	System Headers --------------------------
#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

// ----	Project Headers -------------------------
#include "cwsw_lib.h"

#include "sys_devcon.h"
#include "../sys_clk.h"
#include "sys_clk_variant_mapping.h"

// ----	Module Headers --------------------------


// ============================================================================
// ----	Constants -------------------------------------------------------------
// ============================================================================
#define SYS_CLK_LOCAL_H__REVSTRING "$Revision: 0123 $"

/* Oscillator module ID used by the PLIB

  Summary:
    Configures the modules ID used by the peripheral library.

  Description:
    This macro configures the modules Id used by the peripheral library.

  Remarks:
    None.
*/
#define OSC_PLIB_ID                                                 OSC_ID_0


// ============================================================================
// ----	Type Definitions ------------------------------------------------------
// ============================================================================

/* Oscillator System Service Hardware Instance Object

  Summary:
    Defines the object required for the maintenance of the hardware.

  Description:
    This defines the object required for the maintenance of the hardware.

  Remarks:
    None.
*/
typedef struct _SYS_CLK_OBJ_STRUCT
{
	/* This variable holds the system clock value. It is also
	used to calculate the other clocks which are derived from the system clock */
	uint32_t systemClock;

	/* Save the clock frequency which is closest to the previously
	   requested frequency */
	uint32_t systemClosestClock;

	/* System clock source */
	CLK_SOURCES_SYSTEM systemClockSource;

	/* Status of the previous System clock Operation */
	SYS_CLK_STATUS systemClockStatus;

	/* This variable holds the peripheral clock value.  */
	uint32_t peripheralClock[PERIPHERAL_BUSES_MAX];

	SYS_CLK_STATUS peripheralClockStatus[PERIPHERAL_BUSES_MAX];

	uint32_t peripheralClosestClock[PERIPHERAL_BUSES_MAX];

	/* This variable holds the USB clock value.  */
	uint32_t usbClock[USB_BUSES_MAX];

	SYS_CLK_STATUS usbClockStatus[USB_BUSES_MAX];

	uint32_t usbClosestClock[USB_BUSES_MAX];

	/* This variable holds the Reference clock value. */
	uint32_t referenceClock[REFERENCE_BUSES_MAX];

	SYS_CLK_STATUS referenceClockStatus[REFERENCE_BUSES_MAX];

	uint32_t referenceClosestClock[REFERENCE_BUSES_MAX];

	SYS_CLK_ERROR_HANDLER callback;

} SYS_CLK_OBJECT;


// ============================================================================
// ----	Public Variables ------------------------------------------------------
// ============================================================================

extern SYS_CLK_OBJECT clkObject;


// ============================================================================
// ----	Public API ------------------------------------------------------------
// ============================================================================

extern uint32_t _SYS_CLK_SystemClockRead(void);
extern bool _SYS_CLK_SystemClockSet(CLK_SOURCES_SYSTEM systemSource, uint32_t systemClockHz, bool waitUntilComplete, uint32_t *clockClosest);
extern CLK_SOURCES_SYSTEM _SYS_CLK_ClockTypeMap( OSC_SYS_TYPE systemSource );


#ifdef	__cplusplus
}
#endif

#endif /* SYS_CLK_LOCAL_H_ */
